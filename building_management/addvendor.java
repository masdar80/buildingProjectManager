/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * analysers.java
 *
 * Created on Dec 8, 2011, 10:09:31 AM
 */

package building_management;

/**
 *
 * @author masdar
 */
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
public class addvendor extends javax.swing.JFrame {

    Object[][] MyArray = null;
    String[] AttributeNames;
    connect conn;
    Statement stmt;
    JFrame invoke ;
    boolean state ;
    int selectedRow;
    int NumberOfRows, NumberOfColumns;
    private final Image img;
    String[] fields = {"vendor_name","vendor_add","vendor_tel","vendor_mob","vendor_email","notices"};
    String tableName = "vendors";
    String tableKey = "vendor_id";
    String query="SELECT "
            + " notices as " +'"'+ "ملاحظات " +'"'
            +", vendor_email  as " +'"'+ "الايميل " +'"'
            +", vendor_mob  as " +'"'+ "الجوال" +'"'
            +", vendor_tel as " +'"'+ "الهاتف" +'"'
            +", vendor_add as " +'"'+ "العنوان" +'"'
            +", vendor_name  as " +'"'+ "المورد" +'"'
            +" FROM vendors  ";
    String cus_id="0";
   

    public addvendor(javax.swing.JFrame mainFram,String id)throws SQLException {
         invoke =mainFram;
         cus_id=id;
        invoke.setEnabled(false);
        initComponents();
        img = Toolkit.getDefaultToolkit().getImage(java.net.URLClassLoader.getSystemResource("icons/1.png"));

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int temp_width = (int) screenSize.getWidth();
        int temp_height = (int) screenSize.getHeight();
       // this.setMaximumSize(new Dimension(680, 530));
      this.setSize(750, 207);
        this.setLocation((temp_width - 725) / 2, (temp_height - 207) / 2);
        this.setIconImage(img);
        customerName.grabFocus();
       
        conn = new connect();
        conn.newConnection();
        try {
            // Class.forName("org.postgresql.Driver");

            java.sql.Statement s = conn.conn.createStatement();
            stmt = conn.conn.createStatement();
        } catch (Exception e) {
        }
        //conn.QueryTable(query, DataBaseTable);

        if(cus_id.equals("0"))
        {
            DoQuery.setText("اضافة");
        }else
        {
            showCustomerFields();
            DoQuery.setText("حفظ");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        customerTel = new javax.swing.JTextField();
        DoQuery = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        customerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        customerAdress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        customerMob = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        notices = new javax.swing.JTextField();
        customerEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("اضافة مورد");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("الهاتف :");

        customerTel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        customerTel.setNextFocusableComponent(customerMob);
        customerTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTelActionPerformed(evt);
            }
        });

        DoQuery.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DoQuery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Files-New-File-icon 24.png"))); // NOI18N
        DoQuery.setText("حفظ");
        DoQuery.setMargin(new java.awt.Insets(2, 1, 2, 1));
        DoQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoQueryActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("االاسم:");

        customerName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        customerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("العنوان :");

        customerAdress.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        customerAdress.setNextFocusableComponent(customerTel);
        customerAdress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerAdressActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("الجوال :");

        customerMob.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        customerMob.setNextFocusableComponent(customerEmail);
        customerMob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerMobActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("ملاحظات:");

        notices.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        notices.setNextFocusableComponent(DoQuery);
        notices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noticesActionPerformed(evt);
            }
        });

        customerEmail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        customerEmail.setNextFocusableComponent(notices);
        customerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerEmailActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("الايميل:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(customerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerMob, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(customerAdress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(customerName)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerTel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DoQuery)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(notices, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(customerName, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(customerAdress, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerMob, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerTel, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notices, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DoQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {customerAdress, customerName, customerTel, notices});

        msg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        msg.setForeground(new java.awt.Color(0, 102, 0));
        msg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg.setToolTipText("");
        msg.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DoQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoQueryActionPerformed
      // if (Functions.editPrevilege) {

       
            if( save())
       
        this.dispose();
   
    
         
    }//GEN-LAST:event_DoQueryActionPerformed
    
    private void customerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        invoke.setEnabled(true);
        invoke.toFront();
//        try {
//          customers.fillCustomerCombo();
//       
//           
//        } catch (SQLException ex) {
//            Logger.getLogger(addcustomers.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_formWindowClosed

    private void customerAdressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerAdressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerAdressActionPerformed

    private void customerTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTelActionPerformed

    private void customerMobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerMobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerMobActionPerformed

    private void noticesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noticesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noticesActionPerformed

    private void customerEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerEmailActionPerformed

private void emptyFields() {
        customerName.setText("");
        customerAdress.setText("");
        customerTel.setText("");
        customerMob.setText("");
        customerEmail.setText("");
        notices.setText("");
       }

private void showCustomerFields() {
    
    
     String selectedCusQuery = "select "
             + "vendors.vendor_name,"
             + "vendors.vendor_add,"
             + "vendors.vendor_tel,"
             + "vendors.vendor_mob,"
             + "vendors.vendor_email,"
             + "vendors.notices "

             + "from vendors where vendor_id="+cus_id;
    Statement recordsStmt;
    try {
        recordsStmt = conn.conn.createStatement();
        ResultSet recordsResultSet = recordsStmt.executeQuery(selectedCusQuery);

        while (recordsResultSet.next()) {
            customerName.setText(recordsResultSet.getString(1));
            customerAdress.setText(recordsResultSet.getString(2));
            customerTel.setText(recordsResultSet.getString(3));
            customerMob.setText(recordsResultSet.getString(4));
            customerEmail.setText(recordsResultSet.getString(5));
            notices.setText(recordsResultSet.getString(6));
        
            
        }
    } catch (SQLException ex) {
        Logger.getLogger(addvendor.class.getName()).log(Level.SEVERE, null, ex);
    }


        
       }

  private void showMessage(String message, boolean state) {
        if (state) {
            msg.setForeground(Color.GREEN);

        } else {
            msg.setForeground(Color.red);
        }
        msg.setText(message);
    }

   /* private void showMessage(String msg, boolean state) {
        if (state) {
            messages.setForeground(Color.GREEN);

        } else {
            messages.setForeground(Color.red);
        }
        messages.setText(msg);
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DoQuery;
    private javax.swing.JTextField customerAdress;
    private javax.swing.JTextField customerEmail;
    private javax.swing.JTextField customerMob;
    private javax.swing.JTextField customerName;
    private javax.swing.JTextField customerTel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel msg;
    private javax.swing.JTextField notices;
    // End of variables declaration//GEN-END:variables

//    private void addnew() {
//        customerName.setBackground(Color.white);
//        if (!Functions.validation(customerName.getText(), 1, true)) {
//            customerName.setBackground(Color.red);
//            customerName.grabFocus();
//            customerName.selectAll();
//           
//            showMessage("يجب ادخال الاسم الزبون",false);
//         
//            state = false;
//            return;
//        }
//
//        customerAdress.setBackground(Color.white);
//        if (!Functions.validation(customerAdress.getText(), 3, false)) {
//            customerAdress.setBackground(Color.red);
//            customerAdress.grabFocus();
//            customerAdress.selectAll();
//              showMessage("يجب ادخال عنوان صحيح",false);
//           
//           // JOptionPane.showMessageDialog(null, " ");
//            state = false;
//            return;
//        }
//
//        customerTel.setBackground(Color.white);
//        if (!Functions.validation(customerTel.getText(), 2, false)) {
//            customerTel.setBackground(Color.red);
//             customerTel.grabFocus();
//            customerTel.selectAll();
//         
//          showMessage("يجب ادخال ارقام فقط",false);
//            //JOptionPane.showMessageDialog(null, " ");
//            state = false;
//            return;
//        }
//
//        customerMob.setBackground(Color.white);
//        if (!Functions.validation(customerMob.getText(), 2, false)) {
//            customerMob.setBackground(Color.red);
//             customerMob.grabFocus();
//            customerMob.selectAll();
//            
//            showMessage("يجب ادخال ارقام فقط",false);
//           // JOptionPane.showMessageDialog(null, " ");
//            state = false;
//            return;
//        }
//
//        customerEmail.setBackground(Color.white);
//        if (!Functions.validation(customerEmail.getText(), 3, false)) {
//            customerEmail.setBackground(Color.red);
//            customerEmail.grabFocus();
//            customerEmail.selectAll();
//            showMessage("يجب ادخال ايميل صحيح",false);
//          
//          //  JOptionPane.showMessageDialog(null, " ");
//            state = false;
//            return;
//        }
//
//        notices.setBackground(Color.white);
//        if (!Functions.validation(notices.getText(), 3, false)) {
//            notices.setBackground(Color.red);
//            notices.grabFocus();
//            notices.selectAll();
//            showMessage("محارف غير مسموحة",false);
//           
//          //  JOptionPane.showMessageDialog(null, " ");
//            state = false;
//            return;
//        }
//  
//           
//                 
//        try {
//            if(conn.checkUniqField("vendor_name",customerName.getText() , tableName))
//            {
//               
//                showMessage("يوجد زبون بنفس الإسم",false);
//                return;
//            }
//           
//            String[] values = {"'" + customerName.getText()+"'",
//                "'" + customerAdress.getText()+"'",
//                "'" + customerTel.getText()+"'",
//                "'" + customerMob.getText()+"'",
//                "'" + customerEmail.getText()+"'",
//                "'" + notices.getText()+"'",
//                "1"};
//            
//            
//                 conn.insertIntoTable(tableName, fields, values);
//             
//        //   conn.QueryTable(query, DataBaseTable);
//
//       
//        } catch (SQLException ex) {
//            Logger.getLogger(addvendor.class.getName()).log(Level.SEVERE, null, ex);
//        }
//                emptyFields();
//                showMessage("تمت عملية الادخال بنجاح  ",true);    
//    }

    private Boolean save() {
      
        
           customerName.setBackground(Color.white);
        if (!Functions.validation(customerName.getText(), 1, true)) {
            customerName.setBackground(Color.red);
            customerName.grabFocus();
            customerName.selectAll();
           
            showMessage("يجب ادخال الاسم الزبون",false);
         
            return false;
            
        }

        customerAdress.setBackground(Color.white);
        if (!Functions.validation(customerAdress.getText(), 3, false)) {
            customerAdress.setBackground(Color.red);
            customerAdress.grabFocus();
            customerAdress.selectAll();
              showMessage("يجب ادخال عنوان صحيح",false);
           
        return false;
        }

        customerTel.setBackground(Color.white);
        if (!Functions.validation(customerTel.getText(), 2, false)) {
            customerTel.setBackground(Color.red);
             customerTel.grabFocus();
            customerTel.selectAll();
         
          showMessage("يجب ادخال ارقام فقط",false);
           return false;
        }

        customerMob.setBackground(Color.white);
        if (!Functions.validation(customerMob.getText(), 2, false)) {
            customerMob.setBackground(Color.red);
             customerMob.grabFocus();
            customerMob.selectAll();
            
            showMessage("يجب ادخال ارقام فقط",false);
           return false;
        }

        customerEmail.setBackground(Color.white);
        if (!Functions.validation(customerEmail.getText(), 3, false)) {
            customerEmail.setBackground(Color.red);
            customerEmail.grabFocus();
            customerEmail.selectAll();
            showMessage("يجب ادخال ايميل صحيح",false);
          
         return false;
        }

        notices.setBackground(Color.white);
        if (!Functions.validation(notices.getText(), 3, false)) {
            notices.setBackground(Color.red);
            notices.grabFocus();
            notices.selectAll();
            showMessage("محارف غير مسموحة",false);
           
          return false;
        }
  
           
                 
        try {
           
           
            String[] values = {"'" + customerName.getText()+"'",
                "'" + customerAdress.getText()+"'",
                "'" + customerTel.getText()+"'",
                "'" + customerMob.getText()+"'",
                "'" + customerEmail.getText()+"'",
                "'" + notices.getText()+"'",
                "1"};
            
             conn.updateTable(tableName, fields, values, "vendor_id", cus_id);
                
             
        //   conn.QueryTable(query, DataBaseTable);

       
        } catch (SQLException ex) {
            Logger.getLogger(addvendor.class.getName()).log(Level.SEVERE, null, ex);
        }
                emptyFields();
                showMessage("تمت عملية التعديل بنجاح  ",true);  
        return true;
        
    }

}
