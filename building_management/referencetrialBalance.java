/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package building_management;

import static building_management.signin.img;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author masdar
 */
public class referencetrialBalance extends javax.swing.JFrame {

    /**
     * Creates new form elements
     *
     * @param bldno
     */
    JFrame invoke;
    String bldno, bld_desc;
    String element_type_id, element_type_dsec;
    connect conn;
    private double total1;
    private String unit;

    public referencetrialBalance(javax.swing.JFrame mainFram) throws SQLException {
        invoke = mainFram;
        invoke.setEnabled(false);
        conn = new connect();
        conn.newConnection();
        
        initComponents();
        img = Toolkit.getDefaultToolkit().getImage(java.net.URLClassLoader.getSystemResource("icons/1.png"));
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int temp_width = (int) screenSize.getWidth();
        int temp_height = (int) screenSize.getHeight();
        // this.setMaximumSize(new Dimension(505, 165));
        this.setSize(703, 140);
        this.setLocation((temp_width - 703) / 2, (temp_height - 140) / 2);
        this.setIconImage(img);
   
        Date currentDate = new Date();
        fromDate.setDate(currentDate);
        toDate.setDate(currentDate);
        conn.fillComboBox("references_", "desc_", ReferenceComboBox1);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ReferenceComboBox1 = new javax.swing.JComboBox();
        fromDate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        toDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("حركات احضار ضمن مجال زمني محدد");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/print-icon 32.png"))); // NOI18N
        add.setText("طباعة");
        add.setMargin(new java.awt.Insets(2, 2, 2, 2));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("تحديد الاحضار :");

        ReferenceComboBox1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        fromDate.setDateFormatString("MMM d, yyyy ");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("من تاريخ :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("الى تاريخ :");

        toDate.setDateFormatString("MMM d, yyyy ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toDate, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(23, 23, 23)
                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReferenceComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(200, 200, 200))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ReferenceComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        invoke.setEnabled(true);
        invoke.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        

    }//GEN-LAST:event_formWindowActivated
    

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        
        try {
            conn.newConnection();
            Statement stmt = null;
            
            
            
            
            Map parameters = new HashMap();
            
            
            
            
            int refer_ID = conn.getIDByDesc("references_", ReferenceComboBox1.getSelectedItem().toString(), "desc_", "reference_id");
            
            parameters.put("ref_id", refer_ID);
            parameters.put("ref_name", ReferenceComboBox1.getSelectedItem().toString());
            java.sql.Date frm_dte = new java.sql.Date(fromDate.getCalendar().getTimeInMillis());
            java.sql.Date to_dte = new java.sql.Date(toDate.getCalendar().getTimeInMillis());
            parameters.put("fromdate", frm_dte);
            parameters.put("todate", to_dte);
            
            
            String query = "SELECT " +
                    " sum( rec_references.quantity ) as total " +
                    
                    "   FROM rec_references   " +
                    "   left  join buildings on rec_references.buildno=buildings.id_  " +
                    "       left join vendors on rec_references.vendor_id=vendors.vendor_id  " +
                    "        where " +
                    "        rec_references.reference_id= " +refer_ID +
                    "        and rec_references.date_ between '"+frm_dte+"' and '"+to_dte+"'";
            
            
            stmt = conn.conn.createStatement();
            ResultSet res = stmt.executeQuery(query);
            while (res.next()) {
                total1 = res.getDouble("total");
            }
            
            parameters.put("total", total1);
            
            
            query = "SELECT  distinct units.desc_ as unit  "+
                    "   FROM rec_references   " +
                    "   left  join references_ on rec_references.reference_id=references_.reference_id " +
                    "   left  join references_categories on references_.category_id=references_categories.reference_id " +
                    "   left  join units on references_categories.unit_id=units.id_  " +
                    "        where " +
                    "        rec_references.reference_id=" +refer_ID  ;
            
            
            stmt = conn.conn.createStatement();
             res = stmt.executeQuery(query);
            while (res.next()) {
                unit = res.getString("unit");
            }
                
                parameters.put("unit", unit);
                
                
                Functions.printJasperReport(parameters, "referencetrialbalance", true);
            } catch (SQLException ex) {
            Logger.getLogger(____quantityReport.class.getName()).log(Level.SEVERE, null, ex);
        }
      
        
    }//GEN-LAST:event_addActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ReferenceComboBox1;
    private javax.swing.JButton add;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private com.toedter.calendar.JDateChooser toDate;
    // End of variables declaration//GEN-END:variables

       // conn.QueryTable(recordsquery, cardRecordsjTable);
}
