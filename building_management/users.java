/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * analysers.java
 *
 * Created on Dec 8, 2011, 10:09:31 AM
 */

package building_management;

/**
 *
 * @author masdar
 */

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
public class users extends javax.swing.JFrame {

    Object[][] MyArray = null;
    String[] AttributeNames;
    static connect conn;
    Statement stmt;
    JFrame invoke ;
    boolean state ;
    int selectedRow;
    int NumberOfRows, NumberOfColumns;
    private final Image img;
    String[] fields = {"username","password_","role_"};
    String tableName = "users";
    String tableKey = "id_";
    String query="SELECT "
            +"role_  as " +'"'+ "الصلاحية" +'"'
            +", password_ as " +'"'+ "كلمة السر" +'"'
            +", username  as " +'"'+ "اسم المستخدم" +'"'
            +" FROM users ";
   

    public users(javax.swing.JFrame mainFram)throws SQLException {
         invoke =mainFram;
        invoke.setEnabled(false);
        initComponents();
        img = Toolkit.getDefaultToolkit().getImage(java.net.URLClassLoader.getSystemResource("icons/1.png"));

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int temp_width = (int) screenSize.getWidth();
        int temp_height = (int) screenSize.getHeight();
       // this.setMaximumSize(new Dimension(680, 530));
      this.setSize(395, 448);
        this.setLocation((temp_width - 395) / 2, (temp_height - 448) / 2);
        this.setIconImage(img);
        username.grabFocus();
        DataBaseTable.setVisible(false);
        conn = new connect();
        conn.newConnection();
        try {
            // Class.forName("org.postgresql.Driver");

            java.sql.Statement s = conn.conn.createStatement();
            stmt = conn.conn.createStatement();
        } catch (Exception e) {
        }
        conn.QueryTable(query, DataBaseTable);

        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        DoQuery = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        role = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataBaseTable = new javax.swing.JTable();
        msg = new javax.swing.JLabel();
        editselected = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("المستخدمين");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("الصلاحية :");

        DoQuery.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DoQuery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add-Folder-icon16.png"))); // NOI18N
        DoQuery.setText("اضافة");
        DoQuery.setMargin(new java.awt.Insets(2, 1, 2, 1));
        DoQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoQueryActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("اسم المستخدم :");

        username.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        username.setNextFocusableComponent(password);
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("كلمة المرور :");

        password.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        role.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        role.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "مدير", "مستخدم", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DoQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(role, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(21, 21, 21))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DoQuery)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {password, username});

        DataBaseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] { ""}
        ) {
            Class[] types = new Class [] { java.lang.Object.class};
            boolean[]canEdit=new boolean[]{true};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DataBaseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DataBaseTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(DataBaseTable);

        msg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        msg.setForeground(new java.awt.Color(0, 102, 0));
        msg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        msg.setToolTipText("");

        editselected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Text-Edit-icon.png"))); // NOI18N
        editselected.setText("تعديل المحدد");
        editselected.setMargin(new java.awt.Insets(2, 1, 2, 1));
        editselected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editselectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(msg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(editselected, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editselected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(msg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DoQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoQueryActionPerformed
      // if (Functions.editPrevilege) {

        username.setBackground(Color.white);
        if (!Functions.validation(username.getText(), 3, true)) {
            username.setBackground(Color.red);
            username.grabFocus();
            username.selectAll();
           
            showMessage("يجب ادخال اسم مستخدم",false);
         
            state = false;
            return;
        }

        password.setBackground(Color.white);
        if (!Functions.validation(password.getText(), 3, true)) {
            password.setBackground(Color.red);
            password.grabFocus();
            password.selectAll();
              showMessage("يجب ادخال كلمة سر",false);
           
            state = false;
            return;
        }

      
             
        try {
             String role_=role.getSelectedItem().toString();
            if(conn.checkUniqField("username",username.getText() , tableName))
            {
               
                showMessage("يوجد مستخدم بنفس الاسم",false);
                return;
            }
           
            String[] values = {"'" + username.getText()+"'",
                "'" + password.getText()+"'","'" +role_+"'"};
            
            
                 conn.insertIntoTable(tableName, fields, values);
             
           conn.QueryTable(query, DataBaseTable);

       
        } catch (SQLException ex) {
            Logger.getLogger(users.class.getName()).log(Level.SEVERE, null, ex);
        }
                emptyFields();
                showMessage("تمت عملية الادخال بنجاح  ",true);
              
                // JOptionPane.showMessageDialog ( null, "تمت عملية الادخال بنجاح  " );
                //showMessage("تمت عملية الحفظ بنجاح", true);
         //   }
         
    }//GEN-LAST:event_DoQueryActionPerformed
    
    private void DataBaseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DataBaseTableMouseClicked
 // TODO add your handling code here:
           // TODO add your handling code here:
    }//GEN-LAST:event_DataBaseTableMouseClicked

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
invoke.setEnabled(true);
invoke.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void editselectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editselectedActionPerformed
        
         selectedRow = DataBaseTable.getSelectedRow();
        if(selectedRow<0)
        {
            showMessage("يجب تحديد سطر لحذفه",false);
                return;
        }
        String valueIndex = DataBaseTable.getValueAt(selectedRow, 2).toString();
         String id = "";
        try {
            id = conn.searchIdwithcondition(tableName, tableKey, "username", valueIndex);
            new edit_users(this, id).setVisible(true);
            } catch (SQLException ex) {
            Logger.getLogger(users.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_editselectedActionPerformed

private void emptyFields() {
        username.setText("");
        password.setText("");
        
       }

  private void showMessage(String message, boolean state) {
        if (state) {
            msg.setForeground(Color.GREEN);

        } else {
            msg.setForeground(Color.red);
        }
        msg.setText(message);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable DataBaseTable;
    private javax.swing.JButton DoQuery;
    private javax.swing.JButton editselected;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel msg;
    private javax.swing.JTextField password;
    private javax.swing.JComboBox role;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
